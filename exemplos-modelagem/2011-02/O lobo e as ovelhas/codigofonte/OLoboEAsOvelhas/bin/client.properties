#****************************************
# Begin client configuration
#****************************************

# Server hostname and port
server.host=saturno.inf.ufsc.br
server.port=1099

# Proxy configuration
# Type is HTTP or SOCKS only
# Leave username and password blank if not needed
# For better security, do not store 
# password in this configuration file
use.proxy=false
proxy.type=HTTP
proxy.host=localhost
proxy.port=8080
proxy.username=
proxy.password=

# The client class prepends the $HOME/.dualrpc
# directory to whatever log filename that you define below.

#****************************************
# End client configuration
#****************************************

#****************************************
# Begin Log4j configuration
#****************************************

# Configuration file for log4j. See http://jakarta.apache.org

# To set global logging level, change the log4j.rootLogger values below.

# Note that the directories for appender log files MUST exist else
# log4j will throw exceptions

# Priority levels are DEBUG < INFO < WARN < ERROR < FATAL.

# If you wish to set the logging level of a particular class
# or logger name do so at the bottom of this configuration file

# If the logger (in the java source file) in initialized with
# configureAndWait() then this configuration file will be reread
# periodically. This means that the application logging can be
# changed without restarting the application

# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.

# for development - set to debug and stdout
# log4j.rootLogger=DEBUG, stdout, rollinglogfile

# for production - set to info level, no stdout and debuglogfile appenders
#log4j.rootLogger=INFO, rollinglogfile

# stdout appender, with ISO 8601 date format
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

# rolling logfile appender, roll based on size
# NOTE: There is also a daily rolling logfile appender available
#       BufferedIO property increases performance under high load
log4j.appender.rollinglogfile=org.apache.log4j.RollingFileAppender
# NOTE: Define the log filename ONLY! The Client class will prepend
# the $HOME/.dualrpc directory to this filename.
# Include your application name in the log filename to avoid file collisions.
log4j.appender.rollinglogfile.File=dualrpc_swing_client.log
log4j.appender.rollinglogfile.layout=org.apache.log4j.PatternLayout
log4j.appender.rollinglogfile.layout.ConversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.rollinglogfile.MaxFileSize=1024KB
log4j.appender.rollinglogfile.MaxBackupIndex=4

# set different logging levels for some packages or classes
# matches package or classname pattern after "log4j.logger."
#log4j.logger.com.aaa.bbb=WARN
#log4j.logger.com.aaa.bbb.MyClass=DEBUG

#****************************************
# End Log4j configuration
#****************************************


